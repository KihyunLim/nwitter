{"version":3,"sources":["fbase.js","routes/Auth.jsx","components/Nweet.jsx","routes/Home.jsx","routes/Profile.jsx","components/Navigation.jsx","components/Router.jsx","components/App.jsx","index.js"],"names":["app","firebase","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","authService","getAuth","dbService","getFirestore","i","Auth","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","onChange","event","target","name","value","onSubmit","preventDefault","data","undefined","createUserWithEmailAndPassword","signInWithEmailAndPassword","console","log","message","className","icon","faTwitter","color","size","style","marginBottom","type","placeholder","required","onClick","prev","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","toggleEditing","updateDoc","autoFocus","faTrash","faPencilAlt","Home","userObj","nweet","setNweet","nweets","setNweets","addDoc","collection","createdAt","Date","now","creatorId","uid","useEffect","q","query","orderBy","onSnapshot","qs","nweetsArray","forEach","push","maxLength","marginTop","map","key","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","getMyNweets","where","updateProfile","currentUser","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","Boolean","Object","assign","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4c96408d.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport * as firebase from \"firebase/app\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getFirestore } from \"firebase/firestore\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n  measurementId: process.env.REACT_APP_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = firebase.initializeApp(firebaseConfig);\r\n\r\nexport const authService = getAuth(app);\r\nexport const dbService = getFirestore(app);","import React, { useState } from \"react\";\r\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\r\nimport { authService } from 'fbase';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const onChange = (event) => {\r\n    const { target: { name, value } } = event;\r\n\r\n    if (name === 'email') {\r\n      setEmail(value);\r\n    } else if (name === 'password') {\r\n      setPassword(value);\r\n    }\r\n  }\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      let data = undefined;\r\n      if (newAccount) {\r\n        data = await createUserWithEmailAndPassword(authService, email, password);\r\n      } else {\r\n        data = await signInWithEmailAndPassword(authService, email, password);\r\n      }\r\n\r\n      console.log(data);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n  }\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"authContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faTwitter}\r\n          color={\"#04AAFF\"}\r\n          size=\"3x\"\r\n          style={{ marginBottom: 30 }}\r\n        />\r\n        <form onSubmit={onSubmit} className=\"container\">\r\n          <input type=\"email\" name=\"email\" className=\"authInput\" placeholder='Email' required value={email} onChange={onChange} />\r\n          <input type=\"password\" name=\"password\" className=\"authInput\" placeholder='Password' required value={password} onChange={onChange} />\r\n          <input type=\"submit\" className=\"authInput authSubmit\" value={newAccount ? \"Create Account\" : \"Sign In\"} />\r\n          {error && <span className=\"authError\">{error}</span>}\r\n        </form>\r\n        <span onClick={toggleAccount}>{newAccount ? \"Sign In\" : \"Create Account\"}</span>\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Auth;","import React, { useState } from \"react\";\r\nimport { dbService } from 'fbase';\r\nimport { deleteDoc, doc, updateDoc } from 'firebase/firestore';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm('Are you sure you want to delete this nweet?');\r\n\r\n    if (ok) {\r\n      await deleteDoc(doc(dbService, 'nweets', nweetObj.id));\r\n    }\r\n  };\r\n  const toggleEditing = () => setEditing((prev) => !prev);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await updateDoc(doc(dbService, 'nweets', nweetObj.id), { text: newNweet });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const { target: { value } } = event;\r\n\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div className=\"nweet\">\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"container nweetEdit\">\r\n                <input type=\"text\" className=\"formInput\" placeholder=\"Edit your nweet\" value={newNweet} onChange={onChange} autoFocus required />\r\n                <input type=\"submit\" className=\"formBtn\" value=\"Update Nweet\" />\r\n              </form>\r\n              <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                Cancel\r\n              </span>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <h4>{nweetObj.text}</h4>\r\n          {isOwner && (\r\n            <div className=\"nweet__actions\">\r\n              <span onClick={onDeleteClick}>\r\n                <FontAwesomeIcon icon={faTrash} />\r\n              </span>\r\n              <span onClick={toggleEditing}>\r\n                <FontAwesomeIcon icon={faPencilAlt} />\r\n              </span>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Nweet;","import React, { useState, useEffect } from \"react\";\r\nimport Nweet from 'components/Nweet';\r\nimport { dbService } from 'fbase';\r\nimport { addDoc, collection, onSnapshot, orderBy, query } from 'firebase/firestore';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState('');\r\n  const [nweets, setNweets] = useState([]);\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n\r\n    await addDoc(collection(dbService, 'nweets'), { \r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n    });\r\n    setNweet('');\r\n  };\r\n  const onChange = (event) => {\r\n    const { target: { value } } = event;\r\n\r\n    setNweet(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const q = query(collection(dbService, 'nweets'), orderBy('createdAt', 'desc'));\r\n    onSnapshot(q, (qs) => {\r\n      const nweetsArray = [];\r\n      qs.forEach((doc) => {\r\n        nweetsArray.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        });\r\n      });\r\n      setNweets(nweetsArray);\r\n    });\r\n  }, []);\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"factoryForm\">\r\n        <div className=\"factoryInput__container\">\r\n          <input\r\n            className=\"factoryInput__input\"\r\n            value={nweet}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"What's on your mind?\"\r\n            maxLength={120}\r\n          />\r\n          <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n        </div>\r\n      </form>\r\n      <div style={{ marginTop: 30 }}>\r\n        {nweets.map((nweet) => (\r\n          <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { signOut, updateProfile } from 'firebase/auth';\r\nimport { authService, dbService } from 'fbase';\r\nimport { collection, onSnapshot, orderBy, query, where } from 'firebase/firestore';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Profile = ({ userObj, refreshUser }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName || '');\r\n  const onLogOutClick = () => {\r\n    signOut(authService);\r\n    refreshUser();\r\n    history.push('/');\r\n  };\r\n  const getMyNweets = async () => {\r\n    const q = query(collection(dbService, 'nweets'), where('creatorId', '==', userObj.uid), orderBy('createdAt', 'desc'));\r\n    onSnapshot(q, (qs) => {\r\n      const nweetsArray = [];\r\n      qs.forEach((doc) => {\r\n        nweetsArray.push({\r\n          ...doc.data(),\r\n          id: doc.id,\r\n        });\r\n      });\r\n      console.log(nweetsArray);\r\n    });\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    const displayName = userObj.displayName || '';\r\n    if (displayName !== newDisplayName) {\r\n      await updateProfile(authService.currentUser, { displayName: newDisplayName });\r\n      refreshUser();\r\n    }\r\n  }\r\n  const onChange = (event) => {\r\n    const { target: { value } } = event;\r\n\r\n    setNewDisplayName(value);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMyNweets();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <form onSubmit={onSubmit} className=\"profileForm\">\r\n        <input type=\"text\" className=\"formInput\" onChange={onChange} value={newDisplayName} placeholder=\"Display name\" autoFocus />\r\n        <input type=\"submit\" className=\"formBtn\" value=\"Update Profile\" style={{ marginTop: 10 }} />\r\n      </form>\r\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\r\n        Log Out\r\n      </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav>\r\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n      <li>\r\n        <Link to=\"/\" style={{ marginRight: 10 }}><FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" /></Link>\r\n      </li>\r\n      <li>\r\n        <Link \r\n          to=\"/profile\" \r\n          style={{ \r\n            marginLeft: 10, \r\n            display: \"flex\", \r\n            flexDirection: \"column\", \r\n            alignItems: \"center\", \r\n            fontSize: 12 \r\n          }}>\r\n            <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n            <span style={{ marginTop: 10 }}>\r\n              {userObj.displayName || userObj.email}의 profile\r\n            </span>\r\n          </Link>\r\n      </li>\r\n    </ul>\r\n  </nav>\r\n)\r\n\r\nexport default Navigation;","import React from \"react\";\r\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Auth from 'routes/Auth';\r\nimport Home from 'routes/Home';\r\nimport Profile from 'routes/Profile';\r\nimport Navigation from 'components/Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <div\r\n            style={{\r\n              maxWidth: 890,\r\n              width: \"100%\",\r\n              margin: \"0 auto\",\r\n              marginTop: 80,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n            {/* <Redirect from=\"*\" to=\"/\" /> */}\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nexport default AppRouter;","import React, { useEffect, useState } from \"react\";\nimport AppRouter from './Router';\nimport { authService } from 'fbase';\nimport { onAuthStateChanged } from 'firebase/auth';\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj(Object.assign({}, user));\n  };\n\n  useEffect(() => {\n    onAuthStateChanged(authService, (user) => {\n      if (user) {\n        setUserObj(user);\n      } else {\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (\n        <AppRouter isLoggedIn={Boolean(userObj)} userObj={userObj} refreshUser={refreshUser} />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}